## Autogenerated by Scribe. DO NOT MODIFY.

name: Endpoints
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/auth/login
    metadata:
      title: Login
      description: 'Checks the supplied username and password and returns a token if the details are valid'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'The user''s name'
        required: false
        example: eius
        type: string
        custom: []
      password:
        name: password
        description: 'The user''s password'
        required: false
        example: est
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successful",
            "data": {
              "user": {
                "id": 23,
                "name": "User",
                "username": "User",
                "email": "user@example.com",
                "avatar_url": "https://www.gravatar.com/avatar/b58996c504c5638798eb6b511e6f49af.jpg?s=80&d=https%3A%2F%2Fplacehold.it%2F160x160%2F00a65a%2Fffffff%2F%26text%3DU&r=g",
                "roles": [
                  "User"
                ]
              },
              "access_token": "4|XP9j2cxsNudDXf2JxPIMhe0XCNHIPzEPIMYC7RuL"
            }
          }
        headers: []
        description: '200'
      -
        status: 400
        content: |-
          {
           "message": "Invalid Username or Password"
          }
        headers: []
        description: '400, Invalid username or password'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      title: 'User Profile'
      description: 'Gets the current authenticated user profile including name, username, email and avatar url.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successful",
            "data": {
              "id": 23,
              "name": "User",
              "username": "User",
              "email": "user@example.com",
              "avatar_url": "https://www.gravatar.com/avatar/b58996c504c5638798eb6b511e6f49af.jpg?s=80&d=https%3A%2F%2Fplacehold.it%2F160x160%2F00a65a%2Fffffff%2F%26text%3DU&r=g",
              "roles": [
                "User"
              ]
            }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/auth/register
    metadata:
      title: Register
      description: 'Registeres a new user.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The new user''s name'
        required: false
        example: rerum
        type: string
        custom: []
      username:
        name: username
        description: 'The new user''s username'
        required: false
        example: consequatur
        type: string
        custom: []
      email:
        name: email
        description: 'The new user''s email'
        required: false
        example: officiis
        type: string
        custom: []
      password:
        name: password
        description: 'The password'
        required: false
        example: aut
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The password again'
        required: false
        example: ipsa
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successful",
            "data": {
              "id": 23,
              "name": "User",
              "username": "User",
              "email": "user@example.com",
              "avatar_url": "https://www.gravatar.com/avatar/b58996c504c5638798eb6b511e6f49af.jpg?s=80&d=https%3A%2F%2Fplacehold.it%2F160x160%2F00a65a%2Fffffff%2F%26text%3DU&r=g",
              "roles": [
                "User"
              ]
            }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/auth/forgot-password
    metadata:
      title: 'Forgot Password'
      description: 'Requests a Reset Password Email.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      username:
        name: username
        description: 'The user''s username or email'
        required: false
        example: rerum
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successful",
            "data": {
              "id": 23,
              "name": "User",
              "username": "User",
              "email": "user@example.com",
              "avatar_url": "https://www.gravatar.com/avatar/b58996c504c5638798eb6b511e6f49af.jpg?s=80&d=https%3A%2F%2Fplacehold.it%2F160x160%2F00a65a%2Fffffff%2F%26text%3DU&r=g",
              "roles": [
                "User"
              ]
            }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/avatar
    metadata:
      title: 'Update User Avatar'
      description: 'Updates the current authenticated user''s avatar.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      photo:
        name: photo
        description: 'The new avatar image'
        required: false
        example: null
        type: file
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successful",
            "data": {
              "id": 23,
              "name": "User",
              "username": "User",
              "email": "user@example.com",
              "avatar_url": "https://www.gravatar.com/avatar/b58996c504c5638798eb6b511e6f49af.jpg?s=80&d=https%3A%2F%2Fplacehold.it%2F160x160%2F00a65a%2Fffffff%2F%26text%3DU&r=g",
              "roles": [
                "User"
              ]
            }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user/password
    metadata:
      title: 'Change User Password'
      description: 'Changes the current authenticated user''s password.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      existing_password:
        name: existing_password
        description: 'The existing password'
        required: false
        example: consectetur
        type: string
        custom: []
      password:
        name: password
        description: 'The new password'
        required: false
        example: eum
        type: string
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'The new password again'
        required: false
        example: sequi
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successful",
            "data": {
              "id": 23,
              "name": "User",
              "username": "User",
              "email": "user@example.com",
              "avatar_url": "https://www.gravatar.com/avatar/b58996c504c5638798eb6b511e6f49af.jpg?s=80&d=https%3A%2F%2Fplacehold.it%2F160x160%2F00a65a%2Fffffff%2F%26text%3DU&r=g",
              "roles": [
                "User"
              ]
            }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/user
    metadata:
      title: 'Update User Profile'
      description: 'Updates the current authenticated user profile including name, username, and email.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'The user''s name'
        required: false
        example: perferendis
        type: string
        custom: []
      username:
        name: username
        description: 'The user''s username'
        required: false
        example: recusandae
        type: string
        custom: []
      email:
        name: email
        description: 'The user''s email'
        required: false
        example: nostrum
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Successful",
            "data": {
              "id": 23,
              "name": "User",
              "username": "User",
              "email": "user@example.com",
              "avatar_url": "https://www.gravatar.com/avatar/b58996c504c5638798eb6b511e6f49af.jpg?s=80&d=https%3A%2F%2Fplacehold.it%2F160x160%2F00a65a%2Fffffff%2F%26text%3DU&r=g",
              "roles": [
                "User"
              ]
            }
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/auth/logout
    metadata:
      title: ''
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses: []
    responseFields: []
